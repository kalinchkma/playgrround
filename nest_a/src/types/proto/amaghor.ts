// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v3.21.12
// source: proto/amaghor.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "amaghor";

export interface AmaghorRequest {
  query: string;
}

export interface AmaghorResponse {
  result: string;
  errors: string[];
}

export const AMAGHOR_PACKAGE_NAME = "amaghor";

export interface AmaghorServiceClient {
  getAmaghorData(request: AmaghorRequest): Observable<AmaghorResponse>;
}

export interface AmaghorServiceController {
  getAmaghorData(request: AmaghorRequest): Promise<AmaghorResponse> | Observable<AmaghorResponse> | AmaghorResponse;
}

export function AmaghorServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getAmaghorData"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("AmaghorService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("AmaghorService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const AMAGHOR_SERVICE_NAME = "AmaghorService";
